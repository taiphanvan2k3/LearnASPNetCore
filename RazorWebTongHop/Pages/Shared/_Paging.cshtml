@*
Model:
- currentPage: int - trang hiện tại
- countPages: int - tổng số trang
- generateUrl: delegate Func<int?,string> trả về URL tương ứn với trang p (1,2,3...)
*@

@model RazorWebTongHop.Helper.PagingModel
@{
    int currentPage = Model.CurrentPage;
    int countPages = Model.CountPages;
    var generateUrl = Model.GenerateUrl;
    if (currentPage > countPages)
    {
        currentPage = countPages;
    }

    if (countPages <= 1)
    {
        return;
    }

    int? previous = null;
    int? next = null;

    if (currentPage > 1)
    {
        previous = currentPage - 1;
    }

    if (currentPage < countPages)
    {
        next = currentPage + 1;
    }

    // Các trang hiển thị trong điều hướng
    List<int> pageRanges = new List<int>();

    // Số trang mở rộng về mỗi bên trang hiện tại
    int delta = 5;

    // Số trang 2 bên trang hiện tại
    int remain = delta * 2;

    pageRanges.Add(currentPage);

    // Các trang phát triển về hai phía của trang hiện tại
    for (int i = 1; i <= delta; i++)
    {
        if (currentPage + i <= countPages)
        {
            pageRanges.Add(currentPage + i);
            remain--;
        }

        if (currentPage - i >= 1)
        {
            pageRanges.Insert(0, currentPage - i);
            remain--;
        }
    }

    // Chèn thêm các trang cho đủ remain
    // Ví dụ currentPage = 3 thì sau khi chèn được: 1,2,3,4,5,6,7,8 và remain = 10-2-5=3
    // Giờ cần chèn thêm các trang cho đủ 3 trang remains thì không thẻ chèn vào đầu mà phải chèn vào cuối
    if (remain > 0)
    {
        if (pageRanges[0] == 1)
        {
            for (int i = 1; i <= remain; i++)
            {
                if (pageRanges.Last() + 1 <= countPages)
                {
                    pageRanges.Add(pageRanges.Last() + 1);
                }
            }
        }
        else
        {
            for (int i = 1; i <= remain; i++)
            {
                if (pageRanges.First() - 1 >= 1)
                {
                    pageRanges.Insert(0, pageRanges.First() - 1);
                }
            }
        }
    }
}

@* Phát sinh HTML *@
<ul class="pagination" style="position: absolute; bottom: 50px; right: 50px;">
    <!-- Previous page link -->
    @if (previous != null)
    {
        <li class="page-item">
            <a class="page-link" href="@generateUrl(previous)">Trang trước</a>
        </li>
    }
    else
    {
        <li class="page-item disabled">
            @* disable trang trước *@
            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Trang trước</a>
        </li>
    }

    <!-- Đánh số các trang -->
    @foreach (var pageIndex in pageRanges)
    {
        if (pageIndex != currentPage)
        {
            <li class="page-item">
                <a class="page-link" href="@generateUrl(pageIndex)">@pageIndex</a>
            </li>
        }
        else
        {
            <li class="page-item active" aria-current="page">
                @*  <span class="sr-only">(current)</span> *@
                <a class="page-link" href="#">@pageIndex</a>
            </li>
        }
    }

    <!-- Tạo nút trang sau -->
    @if (next != null)
    {
        <li class="page-item">
            <a class="page-link" href="@generateUrl(next)">Trang sau</a>
        </li>
    }
    else
    {
        <li class="page-item">
            <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Trang sau</a>
        </li>
    }
</ul>